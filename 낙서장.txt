let mut  변수명 값; //mut을 붙여 가변(값을 변경) 변수를 선언할수있다.


부호가 있는 정수타입                                 부호가 없는 정수 타입
i8     8비트 정수(-128~127)                             u8      8비트 정수(0~255)
i16    16비트 정수(-32768~32767)                        u16     16비트 정수(0~65535)
i32    32비트 정수                                      u32     32비트 정수
i64    64비트 정수                                      u64     64비트 정수
i128   128비트 정수                                     u128    128비트 정수
isize  OS의 비트와 동일한 크기의 비트(64비트 OS = i64)    usize   OS의 비트와 동일한 크기의 비트(64비트 OS = u64)


let = 변수 as 타입

fn 함수명 ( 인수 선언 ) -> 반환 값 타입 {
    //변수 선언 및 함수의 동작 정의
}

곱셈 함수 정의 
fn mulitplication(a: i64, b: i64) -> i64{
    a * b
}

클로저 작성 방법 = python에서의 람다 함수와 같은 익명 함수
let 이름 = |인수| 정의;

함수를 호출할 때 '&mut'을 지정해 해당 값이 가변 참조라는 것을 명시 할 수 있다.
*arg=100은 참조 값을 반환할 때 해당 값을 변경해야 하므로 역참조를 나타내는 *을 사용한다.

for i in 2..100 2부터 99까지
for i in 2..=100 2부터 100까지


cargo의 기능                        명령
프로젝트 및 템플릿 생성              cargo new [프로젝트 이름]
프로젝트 빌드                       cargo build
프로젝트 실행                       cargo run
프로젝트 내의 러스트 문법 체크        cargo check
프로젝트 테스트                      cargo test
문서 생성                            cargo doc
라이브러리 공개                       cargo publish


TOML
